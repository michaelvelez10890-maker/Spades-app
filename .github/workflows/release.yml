name: Android Release (signed APK)

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: 17 }
      - uses: android-actions/setup-android@v3

      - name: Accept licenses + install SDKs
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Install Cordova
        run: npm i -g cordova@12

      - name: Prepare Android platform
        run: |
          cordova platform rm android || true
          cordova platform add android@12.0.1

      - name: Install Gradle 8.7
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.7
          echo "$HOME/.sdkman/candidates/gradle/current/bin" >> "$GITHUB_PATH"
          gradle -v

      - name: Build unsigned Release APK
        run: |
          gradle -p platforms/android assembleRelease --stacktrace --warning-mode all
          ls -la platforms/android/app/build/outputs/apk/release

      - name: Restore keystore from secret
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > keystore.jks

      - name: Zipalign + Sign APK
        env:
          KSPASS: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ALIAS:  ${{ secrets.ANDROID_KEY_ALIAS }}
          KPASS:  ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          unsigned=platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
          aligned=app-release-aligned.apk
          signed=app-release-signed.apk
          zipalign -v -p 4 "$unsigned" "$aligned"
          apksigner sign --ks keystore.jks \
            --ks-pass pass:${KSPASS} \
            --key-pass pass:${KPASS} \
            --out "$signed" "$aligned"
          apksigner verify --verbose "$signed"
          echo "SIGNED_APK=$signed" >> $GITHUB_ENV

      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: Spades-release-signed-apk
          path: ${{ env.SIGNED_APK }}

      - name: Publish GitHub Release (only when pushing a tag like v1.0.0)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.SIGNED_APK }}
          generate_release_notes: true
